# 굳이 아래처럼 안 하고 원소만 순환시켜서 비교해 주면 된다.
'''
정확성  테스트
테스트 1 〉	통과 (0.00ms, 10.2MB)
테스트 2 〉	통과 (0.01ms, 10.1MB)
테스트 3 〉	통과 (0.02ms, 10.1MB)
테스트 4 〉	통과 (0.01ms, 10.1MB)
테스트 5 〉	통과 (0.01ms, 10.3MB)
테스트 6 〉	통과 (0.01ms, 10.2MB)
테스트 7 〉	통과 (0.01ms, 10.1MB)
테스트 8 〉	통과 (0.01ms, 10.2MB)
테스트 9 〉	통과 (0.05ms, 10.3MB)
테스트 10 〉	통과 (0.01ms, 10.2MB)
테스트 11 〉	통과 (0.01ms, 10.2MB)
테스트 12 〉	통과 (0.01ms, 10.1MB)
테스트 13 〉	통과 (0.01ms, 10.2MB)
테스트 14 〉	통과 (0.01ms, 10.2MB)
테스트 15 〉	통과 (0.01ms, 10MB)
테스트 16 〉	통과 (0.02ms, 10.2MB)
테스트 17 〉	통과 (0.00ms, 10.1MB)
효율성  테스트
테스트 1 〉	통과 (51.41ms, 27.9MB)
테스트 2 〉	통과 (55.07ms, 27.9MB)
테스트 3 〉	통과 (54.61ms, 27.9MB)
테스트 4 〉	통과 (55.30ms, 27.9MB)
'''
def solution(arr):
    stack = [arr[0]]
    for a in arr:
        if ele != stack[-1]:
            answer.append(a)
    return answer


'''
정확성  테스트
테스트 1 〉	통과 (0.01ms, 10.1MB)
테스트 2 〉	통과 (0.03ms, 10.1MB)
테스트 3 〉	통과 (0.03ms, 10.1MB)
테스트 4 〉	통과 (0.03ms, 10.1MB)
테스트 5 〉	통과 (0.02ms, 10MB)
테스트 6 〉	통과 (0.03ms, 10.1MB)
테스트 7 〉	통과 (0.02ms, 10.2MB)
테스트 8 〉	통과 (0.02ms, 10.2MB)
테스트 9 〉	통과 (0.03ms, 10.1MB)
테스트 10 〉	통과 (0.02ms, 10.1MB)
테스트 11 〉	통과 (0.02ms, 10.1MB)
테스트 12 〉	통과 (0.02ms, 10.1MB)
테스트 13 〉	통과 (0.03ms, 10.2MB)
테스트 14 〉	통과 (0.03ms, 10.1MB)
테스트 15 〉	통과 (0.03ms, 10MB)
테스트 16 〉	통과 (0.04ms, 10.1MB)
테스트 17 〉	통과 (0.00ms, 10.2MB)

효율성  테스트
테스트 1 〉	통과 (134.63ms, 28.4MB)
테스트 2 〉	통과 (131.23ms, 28.3MB)
테스트 3 〉	통과 (130.65ms, 28.4MB)
테스트 4 〉	통과 (130.38ms, 28.4MB)
'''

from collections import deque

def solution(arr):
    arr = deque(arr)
    stack = [arr.popleft()]
    while arr:
        if arr[0] == stack[-1]:
            arr.popleft()
        elif arr[0] != stack[-1]:
            stack.append(arr.popleft())
    return stack